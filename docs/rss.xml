<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>史圣锐的Linux记录博客</title><link>https://Srhampions.github.io/409BOY.github.io</link><description>旨在记录日常工作代码与所学技术原理/工具/流程等，方便后来者的学习更方便自己（毕竟云服务器目前还很贵）</description><copyright>史圣锐的Linux记录博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/36289822?v=4</url><title>avatar</title><link>https://Srhampions.github.io/409BOY.github.io</link></image><lastBuildDate>Wed, 17 Jul 2024 15:21:51 +0000</lastBuildDate><managingEditor>史圣锐的Linux记录博客</managingEditor><ttl>60</ttl><webMaster>史圣锐的Linux记录博客</webMaster><item><title>提取essC双向环境（在提取单向环境基础上作的优化）</title><link>https://Srhampions.github.io/409BOY.github.io/post/ti-qu-essC-shuang-xiang-huan-jing-%EF%BC%88-zai-ti-qu-dan-xiang-huan-jing-ji-chu-shang-zuo-de-you-hua-%EF%BC%89.html</link><description>&gt; 运行目录在：/mnt/sdb1/HAU/wa1/work/shi_shengrui/All_lianqiu/&#13;
&#13;
```bash&#13;
#！ bin/bash&#13;
&#13;
cd ./prokka/anno&#13;
&#13;
# 为xls前面添加菌名&#13;
&#13;
mkdir xiugai&#13;
for file in *.xls; do     awk -v filename='$file' '{print filename '\t' $0}' '$file' &gt; './xiugai/$file'; done&#13;
&#13;
# 筛选essC条目信息&#13;
cd ./xiugai&#13;
 cat *.xls | grep 'essC' | grep 'CDS' | cat &gt; all.txt&#13;
 sed -i 's/.xls//g' all.txt&#13;
 cp ./all.txt ../../..&#13;
 cd ../../..&#13;
 &#13;
# 开始提取序列&#13;
 mkdir -p ./essC_tiqu&#13;
&#13;
while read line; do&#13;
    num=$(echo $line | awk '{print $1}')&#13;
    contig=$(echo $line | awk '{print $2}')&#13;
    start=$(echo $line | awk '{print $3}')&#13;
    end=$(echo $line | awk '{print $4}')&#13;
    strand=$(echo $line | awk '{print $5}')&#13;
&#13;
    # 先判断$strand是 + 还是 -&#13;
    if [ '$strand' = '+' ]; then&#13;
		#这里还要判断start是否小于5W&#13;
		if [ '$start' -lt '50000' ]; then&#13;
			seqkit subseq -r '$((1)):$((end+100000))' --chr $contig --gtf ./prokka/gbk/${num}.gbk ./prokka/$num/*.fna -o ./essC_tiqu/${num}_${start}_${strand}.fa&#13;
		else&#13;
			seqkit subseq -r '$((start-50000)):$((end+100000))' --chr $contig --gtf ./prokka/gbk/${num}.gbk ./prokka/$num/*.fna -o ./essC_tiqu/${num}_${start}_${strand}.fa&#13;
		fi&#13;
	else&#13;
        # 如果是 - ，再判断$start是否 &lt; 10W&#13;
        if [ '$start' -lt '100000' ]; then&#13;
                seqkit subseq -r '1:$((end+50000))' --chr $contig --gtf ./prokka/gbk/${num}.gbk ./prokka/$num/*.fna -o ./essC_tiqu/${num}_${start}_${strand}.fa&#13;
        else&#13;
            seqkit subseq -r '$((start-100000)):$((end+50000))' --chr $contig --gtf ./prokka/gbk/${num}.gbk ./prokka/$num/*.fna -o ./essC_tiqu/${num}_${start}_${strand}.fa&#13;
        fi&#13;
    fi&#13;
&#13;
done &lt; all.txt&#13;
&#13;
# 最后删除seqkit生成的fai文件&#13;
rm ./*.fai&#13;
&#13;
到此essC及其身后的环境及提取完成&#13;
 &#13;
# 对gbk文件进行梳理&#13;
# + 向的选$start小的&#13;
# - 向的选$end大的&#13;
&#13;
&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">https://Srhampions.github.io/409BOY.github.io/post/ti-qu-essC-shuang-xiang-huan-jing-%EF%BC%88-zai-ti-qu-dan-xiang-huan-jing-ji-chu-shang-zuo-de-you-hua-%EF%BC%89.html</guid><pubDate>Wed, 17 Jul 2024 15:21:18 +0000</pubDate></item><item><title>根据prokka注释结果提取essC环境优化版本（提取单边环境）</title><link>https://Srhampions.github.io/409BOY.github.io/post/gen-ju-prokka-zhu-shi-jie-guo-ti-qu-essC-huan-jing-you-hua-ban-ben-%EF%BC%88-ti-qu-dan-bian-huan-jing-%EF%BC%89.html</link><description>&gt; 运行目录在：/mnt/sdb1/HAU/wa1/work/shi_shengrui/All_lianqiu/&#13;
&#13;
```bash&#13;
#！ bin/bash&#13;
&#13;
cd ./prokka/anno&#13;
&#13;
# 为xls前面添加菌名&#13;
&#13;
mkdir xiugai&#13;
for file in *.xls; do     awk -v filename='$file' '{print filename '\t' $0}' '$file' &gt; './xiugai/$file'; done&#13;
&#13;
# 筛选essC条目信息&#13;
cd ./xiugai&#13;
 cat *.xls | grep 'essC' | grep 'CDS' | cat &gt; all.txt&#13;
 sed -i 's/.xls//g' all.txt&#13;
 cp ./all.txt ../../..&#13;
 cd ../../..&#13;
 &#13;
# 开始提取序列&#13;
 mkdir -p ./essC_tiqu&#13;
&#13;
while read line; do&#13;
    num=$(echo $line | awk '{print $1}')&#13;
    contig=$(echo $line | awk '{print $2}')&#13;
    start=$(echo $line | awk '{print $3}')&#13;
    end=$(echo $line | awk '{print $4}')&#13;
    strand=$(echo $line | awk '{print $5}')&#13;
&#13;
    # 先判断$strand是 + 还是 -&#13;
    if [ '$strand' = '+' ]; then&#13;
       seqkit subseq -r '$start:$((end+100000))' --chr $contig --gtf ./prokka/gbk/${num}.gbk ./prokka/$num/*.fna -o ./essC_tiqu/${num}_${start}_${strand}.fa&#13;
    else&#13;
        # 如果是 - ，再判断$start是否 &lt; 10K&#13;
        if [ '$start' -lt '100000' ]; then&#13;
                seqkit subseq -r '1:$end' --chr $contig --gtf ./prokka/gbk/${num}.gbk ./prokka/$num/*.fna -o ./essC_tiqu/${num}_${start}_${strand}.fa&#13;
        else&#13;
            seqkit subseq -r '$((start-100000)):$end' --chr $contig --gtf ./prokka/gbk/${num}.gbk ./prokka/$num/*.fna -o ./essC_tiqu/${num}_${start}_${strand}.fa&#13;
        fi&#13;
    fi&#13;
&#13;
done &lt; all.txt&#13;
&#13;
# 最后删除seqkit生成的fai文件&#13;
rm ./*.fai&#13;
&#13;
到此essC及其身后的环境及提取完成&#13;
 &#13;
&#13;
&#13;
&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">https://Srhampions.github.io/409BOY.github.io/post/gen-ju-prokka-zhu-shi-jie-guo-ti-qu-essC-huan-jing-you-hua-ban-ben-%EF%BC%88-ti-qu-dan-bian-huan-jing-%EF%BC%89.html</guid><pubDate>Wed, 17 Jul 2024 15:20:22 +0000</pubDate></item><item><title>提取CmeB序列（正向＋反向全部）李昊这个内容因为要翻译AA所以要考虑正反向与测序错误NN的问题</title><link>https://Srhampions.github.io/409BOY.github.io/post/ti-qu-CmeB-xu-lie-%EF%BC%88-zheng-xiang-%EF%BC%8B-fan-xiang-quan-bu-%EF%BC%89-li-hao-zhe-ge-nei-rong-yin-wei-yao-fan-yi-AA-suo-yi-yao-kao-lv-zheng-fan-xiang-yu-ce-xu-cuo-wu-NN-de-wen-ti.html</link><description>提取CmeB序列（正向＋反向全部）&#13;
&#13;
```bash&#13;
mkdir ncbi_exc_NN&#13;
&#13;
cat ./ab_CmeB/CmeB/*.fa.txt &gt; ncbi_exc_NN/res_sum.txt&#13;
&#13;
cat ./ncbi_exc_NN/res_sum.txt | grep -v '#' | awk '{print $1,$6,$2,$3-1,$4,$5}' | sed 's#/#_#g' | cat &gt; ncbi_exc_NN/id.txt&#13;
&#13;
split -l 1 ncbi_exc_NN/id.txt -d ncbi_exc_NN/roll&#13;
&#13;
for i in ` ls ncbi_exc_NN/roll* |sed 's#ncbi_exc_NN/##g' `&#13;
do&#13;
        str=$(cat ncbi_exc_NN/$i |awk '{print $1}' |sed 's/.fa//g')&#13;
        res=$(cat ncbi_exc_NN/$i  |awk '{print $2}')&#13;
        start=$(cat ncbi_exc_NN/$i | awk '{print $4}')&#13;
        strand=$(cat ncbi_exc_NN/$i | awk '{print $6}')&#13;
        mkdir -p ncbi_exc_NN/$str&#13;
        cat ncbi_exc_NN/$i |awk -v OFS='\t' '{print $3,$4,$5}' |cat &gt;ncbi_exc_NN/${str}_${res}_${start}_id.txt&#13;
        cp ncbi_exc_NN/${str}_* ncbi_exc_NN/${str}/&#13;
        seqkit subseq --bed ncbi_exc_NN/${str}/${str}_${res}_${start}_id.txt ./206_fa/$str.fa -o ncbi_exc_NN/$str/${res}_${str}_${start}_${strand}.fa&#13;
done&#13;
&#13;
rm ./ncbi_exc_NN/roll*&#13;
rm ./ncbi_exc_NN/*_id.txt&#13;
&#13;
mkdir ncbi_exc_NN_all&#13;
find ./ncbi_exc_NN/ -name '*.fa' -exec cp {} ./ncbi_exc_NN_all/ \;&#13;
```&#13;
&#13;
接下来对反向序列进行反向互补&#13;
&#13;
```bash&#13;
for file in ./ncbi_exc_NN_all/*-*; do&#13;
    filename=$(basename '$file')&#13;
    seqkit seq -r -p '$file' | sed 's/&gt;.*/&gt;$filename/' &gt; '$file.modified.fasta'&#13;
done&#13;
&#13;
# 这里需要更改，菌株名中会存在'-'符号，会干扰反转这个步骤，出现重复项&#13;
&#13;
&#13;
rm ./ncbi_exc_NN_all/*-.fa&#13;
&#13;
mkdir ./ncbi_exec_AA/CmeB_AA&#13;
mkdir ./ncbi_exec_AA/RECmeB_AA&#13;
&#13;
for i in ./ncbi_exc_NN_all/CmeB*; do&#13;
    output_file='./ncbi_exec_AA/CmeB_AA/$(basename '$i' .fa).translated.fa'&#13;
    seqkit translate '$i' &gt; '$output_file'&#13;
done&#13;
&#13;
# 因为有些提取的序列中存在n缺失碱基，所以需要用for循环处理而不是seqkit translate 全部fa&#13;
&#13;
for i in ./ncbi_exc_NN_all/RECmeB*; do&#13;
    output_file='./ncbi_exec_AA/RECmeB_AA/$(basename '$i' .fa).translated.fa'&#13;
    seqkit translate '$i' &gt; '$output_file'&#13;
done&#13;
&#13;
```&#13;
&#13;
```bash&#13;
for i in *.fa ; do filename=$(basename '$i') ; sed -i 's/^&gt;\(.*\)/&gt;${filename}/g' '$i' ; done&#13;
&#13;
# 为文件内容中&gt;后的内容替换为文件名&#13;
&#13;
diff wenjian.txt CmeB_NN.txt | grep '^&lt;' &gt; unique_NN.txt&#13;
diff wenjian.txt CmeB_AA.txt | grep '^&lt;' &gt; unique_AA.txt&#13;
&#13;
```&#13;
&#13;
您可以使用 `diff` 命令来比较两个文件，并筛选出它们之间不重复的内容。</description><guid isPermaLink="true">https://Srhampions.github.io/409BOY.github.io/post/ti-qu-CmeB-xu-lie-%EF%BC%88-zheng-xiang-%EF%BC%8B-fan-xiang-quan-bu-%EF%BC%89-li-hao-zhe-ge-nei-rong-yin-wei-yao-fan-yi-AA-suo-yi-yao-kao-lv-zheng-fan-xiang-yu-ce-xu-cuo-wu-NN-de-wen-ti.html</guid><pubDate>Wed, 17 Jul 2024 15:19:12 +0000</pubDate></item><item><title>于师兄提取特定基因环境优化</title><link>https://Srhampions.github.io/409BOY.github.io/post/yu-shi-xiong-ti-qu-te-ding-ji-yin-huan-jing-you-hua.html</link><description>```bash&#13;
cat ./res_sum.txt | awk '$6=='CmeB' {print $1,$2,$3,$4}' | cat &gt; ./id.txt ; split -l 1 ./id.txt -d ./roll&#13;
&#13;
for i in ` ls ./roll* `&#13;
do&#13;
        id=$(cat $i |awk '{print $1}')&#13;
        contig=$(cat $i | awk '{print $2}')&#13;
        start=$(cat $i | awk '{print $3}')&#13;
        cat $i |awk -v OFS='\t' '{print $2,$3,$4}' | cat &gt; ./$id.id.txt ;seqkit subseq --bed ./$id.id.txt ../206_fa/$id -o ./CmeB_${id}_${contig}_${start}.fa&#13;
done&#13;
&#13;
rm roll*&#13;
rm *.id.txt&#13;
```&#13;
&#13;
```bash&#13;
cat ./res_sum.txt | awk '$6=='RECmeB' {print $1,$2,$3,$4}' | cat &gt; ./id.txt ; split -l 1 ./id.txt -d ./roll&#13;
&#13;
for i in ` ls ./roll* `&#13;
do &#13;
	id=$(cat $i |awk '{print $1}')&#13;
	contig=$(cat $i | awk '{print $2}')&#13;
	start=$(cat $i | awk '{print $3}')&#13;
	cat $i |awk -v OFS='\t' '{print $2,$3,$4}' | cat &gt; ./$id.id.txt ;seqkit subseq --bed ./$id.id.txt ../206_fa/$id -o ./RECmeB_${id}_${contig}_${start}.fa&#13;
done&#13;
&#13;
rm roll*&#13;
rm *.id.txt&#13;
```&#13;
&#13;
```bash&#13;
#!/bin/bash&#13;
&#13;
mkdir -p general_ab_anno ; mkdir -p general_ab_anno/ncbi general_ab_anno/resfinder general_ab_anno/plasmidfinder general_ab_anno/vfdb&#13;
&#13;
for id in ` ls *.fa `&#13;
&#13;
do&#13;
&#13;
abricate --threads 32 --db ncbi ${id} &gt; general_ab_anno/ncbi/${id}.txt ; abricate --threads 40 --db resfinder ${id} &gt; general_ab_anno/resfinder/${id}.txt ; abricate --threads 40 --db plasmidfinder ${id} &gt; general_ab_anno/plasmidfinder/${id}.txt ; abricate --threads 40 --db vfdb ${id} &gt; general_ab_anno/vfdb/${id}.txt&#13;
&#13;
done&#13;
&#13;
abricate --summary general_ab_anno/ncbi/*.txt &gt; general_ab_anno/ncbi.summary.txt ; abricate --summary general_ab_anno/plasmidfinder/*.txt &gt; general_ab_anno/plasmidfinder.summary.txt ; abricate --summary general_ab_anno/resfinder/*.txt &gt; general_ab_anno/resfinder.summary.txt ; abricate --summary general_ab_anno/vfdb/*.txt &gt; general_ab_anno/vfdb.summary.txt&#13;
&#13;
&#13;
mkdir -p ncbi_exc ; cat general_ab_anno/ncbi/*.fa.txt &gt;ncbi_exc/res_sum.txt ;cat ncbi_exc/res_sum.txt |grep -v '#' |awk '{print $1,$6,$2,$3-1,$4}' | sed 's#/#_#g' | cat &gt; ncbi_exc/id.txt ; split -l 1 ncbi_exc/id.txt -d ncbi_exc/roll&#13;
for i in ` ls ncbi_exc/roll* |sed 's#ncbi_exc/##g' `&#13;
do&#13;
	str=$(cat ncbi_exc/$i |awk '{print $1}' |sed 's/.fa//g')&#13;
	res=$(cat ncbi_exc/$i |awk '{print $2}')&#13;
	mkdir -p ncbi_exc/$str ;cat ncbi_exc/$i |awk -v OFS='\t' '{print $3,$4,$5}' |cat &gt;ncbi_exc/${str}_${res}_id.txt ;cp ncbi_exc/${str}_* ncbi_exc/${str}/ ; seqkit subseq --bed ncbi_exc/${str}/${str}_${res}_id.txt $str.fa -o ncbi_exc/$str/$res.fa&#13;
done&#13;
&#13;
mkdir -p vfdb_exc ; cat general_ab_anno/vfdb/*.fa.txt &gt;vfdb_exc/vir_sum.txt ;cat vfdb_exc/vir_sum.txt |grep -v '#' |awk '{print $1,$6,$2,$3-1,$4}' | sed 's#/#_#g' |cat &gt; vfdb_exc/id.txt ; split -l 1 vfdb_exc/id.txt -d vfdb_exc/roll&#13;
for i in ` ls vfdb_exc/roll* |sed 's#vfdb_exc/##g' `&#13;
do&#13;
        str=$(cat vfdb_exc/$i |awk '{print $1}' |sed 's/.fa//g')&#13;
        vir=$(cat vfdb_exc/$i |awk '{print $2}')&#13;
        mkdir -p vfdb_exc/$str ;cat vfdb_exc/$i |awk -v OFS='\t' '{print $3,$4,$5}' |cat &gt;vfdb_exc/${str}_${vir}_id.txt&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">https://Srhampions.github.io/409BOY.github.io/post/yu-shi-xiong-ti-qu-te-ding-ji-yin-huan-jing-you-hua.html</guid><pubDate>Wed, 17 Jul 2024 15:17:55 +0000</pubDate></item><item><title>服务器运维代码</title><link>https://Srhampions.github.io/409BOY.github.io/post/fu-wu-qi-yun-wei-dai-ma.html</link><description>#Linux #笔记 #代码&#13;
&#13;
##### 1. for循环&#13;
&#13;
```bash&#13;
for 变量 in 列表&#13;
do&#13;
	循环&#13;
done&#13;
```&#13;
&#13;
###### Example&#13;
&#13;
```bash&#13;
for i in 1 2 3;do          #写一个变量，列表写了3个参数&#13;
echo '$i'                  #打印一下i这个变量的值&#13;
done                       #for循环结束&#13;
```&#13;
&#13;
##### 2. Linux管道符‘|’&#13;
&#13;
管道符主要用于多重命令处理，前面命令的打印结果作为后面命令的输入。</description><guid isPermaLink="true">https://Srhampions.github.io/409BOY.github.io/post/fu-wu-qi-yun-wei-dai-ma.html</guid><pubDate>Wed, 17 Jul 2024 15:14:52 +0000</pubDate></item><item><title>parsnp进化树构建</title><link>https://Srhampions.github.io/409BOY.github.io/post/parsnp-jin-hua-shu-gou-jian.html</link><description>```conda activate parsnp&#13;
nohup parsnp -c -p 16 -n mafft -r ./sc263.fa -d ./*.fa -o parsnp &amp;&#13;
```。</description><guid isPermaLink="true">https://Srhampions.github.io/409BOY.github.io/post/parsnp-jin-hua-shu-gou-jian.html</guid><pubDate>Wed, 17 Jul 2024 07:08:32 +0000</pubDate></item></channel></rss>